import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.BIOcqIiB.js";const k=JSON.parse('{"title":"WebSocket Dashboard","description":"Integrate the Bullet‑Train WebSocket service for real‑time updates.","frontmatter":{"title":"WebSocket Dashboard","description":"Integrate the Bullet‑Train WebSocket service for real‑time updates."},"headers":[],"relativePath":"websocket.md","filePath":"websocket.md"}'),n={name:"websocket.md"};function l(p,s,h,o,r,c){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="websocket-dashboard" tabindex="-1">WebSocket Dashboard <a class="header-anchor" href="#websocket-dashboard" aria-label="Permalink to &quot;WebSocket Dashboard&quot;">​</a></h1><p>Enable live score updates via a WebSocket server. You can run the service manually for development, or install it as a Windows service with <strong>NSSM</strong> (Non‑Sucking Service Manager).</p><h2 id="_1-clone-install-the-ws-service" tabindex="-1">1. Clone &amp; Install the WS Service <a class="header-anchor" href="#_1-clone-install-the-ws-service" aria-label="Permalink to &quot;1. Clone &amp; Install the WS Service&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xampp/htdocs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/aclc‑iriga/tabulation-ws.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tabulation-ws</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.php</span></span></code></pre></div><p>By default, it listens on <code>ws://localhost:8080</code>.</p><h2 id="_2-windows-run-as-a-service-with-nssm" tabindex="-1">2. (Windows) Run as a Service with NSSM <a class="header-anchor" href="#_2-windows-run-as-a-service-with-nssm" aria-label="Permalink to &quot;2. (Windows) Run as a Service with NSSM&quot;">​</a></h2><ol><li><p>Download and install <a href="https://nssm.cc/" target="_blank" rel="noreferrer">NSSM</a>.</p></li><li><p>Open an elevated PowerShell or Command Prompt.</p></li><li><p>Install the service:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nssm install TabulationWS </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:\\PHP\\php.exe&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;C:\\xampp\\htdocs\\tabulation-ws\\index.php&quot;</span></span></code></pre></div></li><li><p>In the NSSM GUI that appears:</p><ul><li><p><strong>Application</strong></p><ul><li>Path: <code>C:\\PHP\\php.exe</code></li><li>Arguments: <code>C:\\path\\to\\tabulation-ws\\index.php</code></li><li>Startup directory: <code>C:\\path\\to\\tabulation-ws</code></li></ul></li><li><p><strong>Details</strong></p><ul><li>Display name: <code>Tabulation WebSocket Service</code></li></ul></li><li><p>Click <strong>Install service</strong>.</p></li></ul></li><li><p>Start it:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nssm start TabulationWS</span></span></code></pre></div></li></ol><p>The service now runs in the background and will auto‑restart on failure or reboot.</p><h2 id="_3-configure-your-app" tabindex="-1">3. Configure Your App <a class="header-anchor" href="#_3-configure-your-app" aria-label="Permalink to &quot;3. Configure Your App&quot;">​</a></h2><p>Copy the example and point to your running service:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/config/websocket.example.php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/config/websocket.php</span></span></code></pre></div><p>Edit <code>app/config/websocket.php</code> to match:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">|-----------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">| Websocket Configuration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">|-----------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$websocket </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // WebSocket server URL (must match the service port)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;url&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ws://127.0.0.1:8080&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h2 id="_4-access-the-dashboard" tabindex="-1">4. Access the Dashboard <a class="header-anchor" href="#_4-access-the-dashboard" aria-label="Permalink to &quot;4. Access the Dashboard&quot;">​</a></h2><ol><li><p>Ensure the WS service is running (<code>nssm status TabulationWS</code>).</p></li><li><p>In your browser, go to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://localhost/&lt;competition-new-slug&gt;/app/dashboard</span></span></code></pre></div></li></ol><h2 id="_5-test-real‐time-updates" tabindex="-1">5. Test Real‑Time Updates <a class="header-anchor" href="#_5-test-real‐time-updates" aria-label="Permalink to &quot;5. Test Real‑Time Updates&quot;">​</a></h2><ol><li>Submit a rating via the Admin UI.</li><li>Watch live updates appear on the WebSocket Dashboard in real time.</li></ol>`,17)]))}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
