import{_ as t,c as o,o as a,ae as s}from"./chunks/framework.BIOcqIiB.js";const h=JSON.parse('{"title":"Production Deployment (Local)","description":"Deploy the application locally for real events and handle backups.","frontmatter":{"title":"Production Deployment (Local)","description":"Deploy the application locally for real events and handle backups."},"headers":[],"relativePath":"production.md","filePath":"production.md"}'),i={name:"production.md"};function l(n,e,r,c,p,d){return a(),o("div",null,e[0]||(e[0]=[s('<h1 id="production-deployment-local" tabindex="-1">Production Deployment (Local) <a class="header-anchor" href="#production-deployment-local" aria-label="Permalink to &quot;Production Deployment (Local)&quot;">‚Äã</a></h1><p>This page walks you through building, configuring, and running your tabulation app on a production‚Äëstyle XAMPP stack. <strong>Note:</strong> you‚Äôll also need to deploy your WebSocket service separately‚Äîsee the next section after this for the WebSocket Dashboard.</p><hr><h2 id="_1-build-frontend-assets" tabindex="-1">1. Build Frontend Assets <a class="header-anchor" href="#_1-build-frontend-assets" aria-label="Permalink to &quot;1. Build Frontend Assets&quot;">‚Äã</a></h2><p>In your project root, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>This compiles and minifies your frontend into <code>public</code>.</p><hr><h2 id="_2-copy-to-xampp-htdocs" tabindex="-1">2. Copy to XAMPP <code>htdocs</code> <a class="header-anchor" href="#_2-copy-to-xampp-htdocs" aria-label="Permalink to &quot;2. Copy to XAMPP `htdocs`&quot;">‚Äã</a></h2><ol><li><strong>Stop</strong> any running development server (<code>Ctrl+C</code> in its terminal).</li><li>Copy the <strong>entire project folder</strong> into <code>C:/xampp/htdocs/&lt;competition-new-slug&gt;</code>.</li><li>In <code>app/config/database.php</code>, confirm you point to the <strong>production‚Äëlocal</strong> database named exactly <code>&lt;competition-new-slug&gt;</code>.</li><li>Ensure the folder permissions allow Apache to read and (for uploads) write to <code>app/crud/uploads</code>.</li></ol><hr><h2 id="_4-access-the-application" tabindex="-1">4. Access the Application <a class="header-anchor" href="#_4-access-the-application" aria-label="Permalink to &quot;4. Access the Application&quot;">‚Äã</a></h2><ul><li><p><strong>Public URL:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://localhost/&lt;competition-new-slug&gt;/</span></span></code></pre></div></li><li><p><strong>Admin Dashboard:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://localhost/&lt;competition-new-slug&gt;/app</span></span></code></pre></div><blockquote><p>üîë At this URL you can perform all CRUD operations‚Äîadding/editing criteria, teams/candidates, titles, eliminations, judge assignments, and more. Remember to change the default admin password immediately!</p></blockquote></li></ul><hr><h2 id="_5-backup-strategy" tabindex="-1">5. Backup Strategy <a class="header-anchor" href="#_5-backup-strategy" aria-label="Permalink to &quot;5. Backup Strategy&quot;">‚Äã</a></h2><details class="details custom-block"><summary>During the Event</summary><ul><li><strong>Export Database</strong> regularly from phpMyAdmin to capture live <code>ratings</code>.</li><li><strong>Backup Uploads</strong>: copy <code>app/crud/uploads</code> (photos, files) to a separate folder.</li></ul></details><details class="details custom-block"><summary>After the Event</summary><ol><li><strong>Clean Template Export</strong></li></ol><ul><li>In phpMyAdmin, select <code>&lt;competition-new-slug&gt;</code>.</li><li>Use <strong>Export ‚Üí Custom</strong> to exclude tables you don‚Äôt need (e.g. <code>ratings</code>).</li><li>Download <code>&lt;competition-new-slug&gt;.sql</code> and commit it to your repo.</li></ul><ol start="2"><li><strong>Archive Results</strong></li></ol><ul><li>Save a separate dump of the final <code>ratings</code> table if you need to preserve scores.</li></ul></details><hr><h2 id="_6-network-lan-access" tabindex="-1">6. Network &amp; LAN Access <a class="header-anchor" href="#_6-network-lan-access" aria-label="Permalink to &quot;6. Network &amp; LAN Access&quot;">‚Äã</a></h2><p>To allow multiple devices on your LAN to view the app:</p><ol><li>Find your PC‚Äôs LAN IP:</li></ol><ul><li>Windows: <code>ipconfig</code> ‚Üí look for ‚ÄúIPv4 Address‚Äù.</li></ul><ol start="2"><li><p>In your firewall settings, ensure <strong>port 80</strong> (HTTP) is open.</p></li><li><p>On another device, browse to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://&lt;LAN-IP&gt;/&lt;competition-new-slug&gt;/</span></span></code></pre></div></li></ol><hr><h2 id="_7-reminder-websocket-service" tabindex="-1">7. Reminder: WebSocket Service <a class="header-anchor" href="#_7-reminder-websocket-service" aria-label="Permalink to &quot;7. Reminder: WebSocket Service&quot;">‚Äã</a></h2><p>Your real‚Äëtime dashboard requires the WebSocket server running separately. After completing this production deployment, navigate to <strong><a href="/migration-guide/websocket.html">WebSocket Dashboard</a></strong> and follow those instructions to install and configure your WebSocket service (e.g., via NSSM on Windows).</p><hr><h2 id="_8-cleanup-for-next-event" tabindex="-1">8. Cleanup for Next Event <a class="header-anchor" href="#_8-cleanup-for-next-event" aria-label="Permalink to &quot;8. Cleanup for Next Event&quot;">‚Äã</a></h2><p>When the pageant ends:</p><ol><li><strong>Reset or Re‚Äëimport</strong> your <code>&lt;competition-new-slug&gt;</code> database from the clean template.</li><li><strong>Archive</strong> any generated logs or temporary files.</li><li>Re‚Äëseed initial data via the Admin UI or fresh SQL dump for the next competition.</li></ol><hr><p>With these steps, your app will run as a locally hosted ‚Äúproduction‚Äù site, ready for judges, audience displays, and backups‚Äîand you‚Äôll be primed to set up the WebSocket Dashboard next!</p>',32)]))}const g=t(i,[["render",l]]);export{h as __pageData,g as default};
